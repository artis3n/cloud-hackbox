---
name: Molecule Tests

on: [pull_request]

jobs:
  molecule:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python_version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      - name: Test
        run: |
          cd kali/ansible
          pipenv run molecule test

  terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Format
        run: cd kali/terraform && terraform fmt
        continue-on-error: true

      - name: Init
        run: cd kali/terraform && terraform init

      - name: Validate
        run: cd kali/terraform && terraform validate -no-color

      - name: Plan
        id: tf_plan
        run: cd kali/terraform && terraform plan -var-file="kali/terraform/input.tfvars.example" -nocolor
        continue-on-error: true

      - name: Add plan to PR
        uses: actions/github-script@v2
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.tf_plan.outputs.stdout }}"
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
