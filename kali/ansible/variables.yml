---

# Most of these packages exist in the base AMI, but not in the Molecule Docker image
# Just include them for both, it's idempotent
apt_packages:
  - awscli
  - binwalk
  - build-essential
  - cifs-utils
  - curl
  - dotdotpwn
  - enum4linux
  - exiftool
  - exploitdb
  - file
  - git
  - gobuster
  - gdb
  - gzip
  - hydra
  - impacket-scripts
  - john
  - kali-desktop-xfce
  - less
  - libguestfs-tools
  - locate
  - logrotate
  - lsof
  - man-db
  - metasploit-framework
  - netcat
  - nbtscan
  - nikto
  - nmap
  - oscanner
  - patator
  - postgresql
  - proxychains4
  - python
  - python3
  - python3-impacket
  - python3-pexpect
  - python3-pip
  - ruby-full
  - samba
  - seclists
  - smbclient
  - smbmap
  - smtp-user-enum
  - software-properties-common
  - socat
  - ssh-client
  - sslyze
  - sqlmap
  - tigervnc-common
  - tigervnc-standalone-server
  - tigervnc-xorg-extension
  - tnscmd10g
  - ufw
  - vim
  - wget
  - whatweb
  - xz-utils
  - zip

prepare_apt_packages:
  - aptitude
  - python3
  - python3-apt
  - ssh

###############
# SSH section #
###############
# Non-default SSH port to reduce the amount of port scans you'll receive
sshd_port: 2242
# Please don't enable...
sshd_root_login: 'no'
# Brute force prevention - block after X number of failed authentication attempts
# UFW will block 6 attempts within 30 seconds. We are a little more strict here.
sshd_max_auth_tries: 3
sshd_timeout_enabled: true
# If SSH client timeout is enabled, default is the Kali/Debian default of 2 minutes
# Configure this to your preference.
sshd_timeout_alive_interval: 120
sshd_timeout_alive_count_max: 1

############
# Firewall #
############
# Customize UFW rules here, if desired
ufw_log_level: low
# UFW log will be rotated at minimum weekly. Will be rotated faster if the log file size reaches this value.
# Use K, M, G for KB, MB, GB.
ufw_log_maxsize: 300M
ufw_rules:
  - { rule: limit, port: '{{ sshd_port }}', proto: tcp }
  - { rule: deny, port: 5901, proto: tcp }
  - { rule: deny, port: 5432, proto: tcp }
  - { rule: allow, port: http, proto: tcp }
  - { rule: allow, port: https, proto: tcp }
  - { rule: allow, port: 53, proto: tcp }
  - { rule: allow, port: 53, proto: udp }
  - { rule: allow, port: 4000:4999, proto: tcp }

#############
# Passwords #
#############
# This is a hard-coded password because access to the VNC server requires an SSH local port forward.
# So, you need to already be able to SSH directly onto the server.
# If you can do that, you can get a gui too.
vnc_pass: goodhacks
# Password-based SSH is disabled, so similarly using this password requires already SSHing to the system as the kali user
kali_user_pass: kali
